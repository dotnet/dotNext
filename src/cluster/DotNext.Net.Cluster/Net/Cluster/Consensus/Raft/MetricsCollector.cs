using System;

namespace DotNext.Net.Cluster.Consensus.Raft
{
    internal interface ILeaderStateMetrics
    {
        void ReportBroadcastTime(TimeSpan value);
    }

    internal interface IFollowerStateMetrics
    {
        void ReportHeartbeat();
    }

    /// <summary>
    /// Contains a set of callbacks that can be used to report
    /// runtime metrics generated by Raft cluster node.
    /// </summary>
    public class MetricsCollector : ILeaderStateMetrics, IFollowerStateMetrics
    {
        /// <summary>
        /// Reports about broadcast time.
        /// </summary>
        /// <remarks>
        /// Broadcast time is the time spent accessing the cluster nodes caused by Leader states.
        /// </remarks>
        /// <param name="value">The broadcast time.</param>
        public virtual void ReportBroadcastTime(TimeSpan value)
        {
        }

        /// <summary>
        /// Reports that node becomes a candidate.
        /// </summary>
        public virtual void MovedToCandidateState()
        {
        }

        /// <summary>
        /// Reports that node becomes a follower.
        /// </summary>
        public virtual void MovedToFollowerState()
        {
        }

        /// <summary>
        /// Reports that node becomes a leader.
        /// </summary>
        public virtual void MovedToLeaderState()
        {
        }

        /// <summary>
        /// Reports that node receives a heartbeat from leader node.
        /// </summary>
        public virtual void ReportHeartbeat()
        {
        }
    }
}